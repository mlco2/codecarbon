[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "codecarbon"
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.7"
authors = [
    { name = "Mila" },
    { name = "DataForGood" },
    { name = "BCG GAMMA" },
    { name = "Comet.ml" },
    { name = "Haverford College" },
]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "arrow",
    "click",
    "pandas",
    "prometheus_client",
    "psutil",
    "py-cpuinfo",
    "pynvml",
    "rapidfuzz",
    "requests",
]

[project.urls]
Homepage = "https://codecarbon.io/"
Repository = "https://github.com/mlco2/codecarbon"
Dashboard = "http://dashboard.codecarbon.io/"
Documentation = "https://mlco2.github.io/codecarbon/"
Issues = "https://github.com/mlco2/codecarbon/issues"
Changelog = "https://github.com/mlco2/codecarbon/releases"

[project.optional-dependencies]

viz = [
    "dash",
    "dash_bootstrap_components < 1.0.0",
    "fire",
]

[project.scripts]
carbonboard = "codecarbon.viz.carbonboard:main"
codecarbon = "codecarbon.cli.main:codecarbon"

[tool.hatch.env]
requires = [
    "hatch-pip-compile"
]

[tool.hatch.envs.default]
# pip-compile automate the export of environments.txt
type = "pip-compile"

[tool.hatch.envs.carbonboard]
features = ["viz"]

[tool.hatch.envs.carbonboard.scripts]
run = "carbonboard {args:.}"

[tool.hatch.envs.docs]
# detached means that other deps won't be installed
detached = true
dependencies = [
  "sphinx",
  "sphinx_rtd_theme",
]
pip-compile-constraint = ""

[tool.hatch.envs.dev]
dependencies = [
    "pre-commit",
    "ruff",
    "black",
    "mypy",
]

[tool.hatch.envs.dev.scripts]
precommit-install = "pre-commit install"
precommit-update = "pre-commit autoupdate"
precommit = "pre-commit run --show-diff-on-failure --color=always --all-files"
mypy-check = "mypy -m codecarbon --ignore-missing-imports --no-strict-optional --disable-error-code attr-defined --disable-error-code assignment --disable-error-code misc"
lint = ["black --check --diff {args:.}", "ruff check {args:.}", "mypy {args:.}"]
format = ["black {args:.}", "ruff --fix --exit-non-zero-on-fix {args:.}"]

[tool.hatch.envs.test]
features = ["viz"]
dependencies = [
   "mock",
   "pytest",
   "responses",
   "numpy",
   "psutil",
   "requests-mock",
   "rapidfuzz",
]

[tool.hatch.envs.test.scripts]
package = 'pytest -vv -m "not integ_test" tests/'
package-integ = 'python -m pytest -vv tests/'

[[tool.hatch.envs.test.matrix]]
# Python 3.7 does not works with pip-tools
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.docs.scripts]
build = "cd docs/edit && make docs"

[tool.hatch.envs.dashboard]
dependencies = [
    "dash>=2.2.0",
    "dash_bootstrap_components",
    "plotly>=5.6.0",
]

[tool.hatch.envs.dashboard.scripts]
run = "cd dashboard && python carbon_board_API.py"

[tool.hatch.envs.api]
dependencies = [
    "alembic<2.0.0",
    "bcrypt<5.0.0",
    "python-dateutil<3.0.0",
    "dependency-injector<5.0.0",
    "fastapi<1.0.0",
    "httpx",
    "pydantic[email]<2.0.0",
    "psycopg2-binary<3.0.0",
    "requests<3.0.0",
    "sqlalchemy<2.0.0",
    "uvicorn[standard]<1.0.0",
    "fastapi-pagination<1.0.0",
    "pytest",
    "mock",
    "pytest",
    "responses",
    "numpy",
    "psutil",
    "requests-mock",
    "rapidfuzz",
]

[tool.hatch.envs.api.scripts]
local = "cd carbonserver && uvicorn main:app --reload"
server-ci = 'cd carbonserver && uvicorn main:app --host 0.0.0.0 --port 8008'
docker = "docker-compose up -d"
test-unit = 'cd carbonserver && python -m pytest -vv tests/api/routers/ && python -m pytest -vv tests/api/service/ && python -m pytest -vv tests/api/usecase/'
test-integ = 'cd carbonserver && python -m pytest -vv tests/api/integration/'
setup-db = 'cd carbonserver && python3 -m alembic -c carbonserver/database/alembic.ini upgrade head'

[tool.hatch.version]
path = "codecarbon/_version.py"

[tool.hatch.build.targets.sdist]
include = [
    "/codecarbon",
]
